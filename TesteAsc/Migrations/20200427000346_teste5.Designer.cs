// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteAsc;

namespace TesteAsc.Migrations
{
    [DbContext(typeof(TesteContext))]
    [Migration("20200427000346_teste5")]
    partial class teste5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TesteAsc.Models.Alunos", b =>
                {
                    b.Property<int>("IdAluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Alunos")
                        .HasColumnType("int");

                    b.Property<int?>("Competicaoid")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnName("Nome")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdAluno");

                    b.HasIndex("Alunos");

                    b.HasIndex("Competicaoid");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("TesteAsc.Models.BoletimAluno", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AlunoAprovado")
                        .HasColumnType("bit");

                    b.Property<int?>("AlunoIdAluno")
                        .HasColumnType("int");

                    b.Property<double>("MediaAluno")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("AlunoIdAluno");

                    b.ToTable("Boletim");
                });

            modelBuilder.Entity("TesteAsc.Models.Competicao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("id");

                    b.ToTable("Competicao");
                });

            modelBuilder.Entity("TesteAsc.Models.Provas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlunoIdAluno")
                        .HasColumnType("int");

                    b.Property<double>("Nota")
                        .HasColumnType("float");

                    b.Property<string>("TipoProva")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoIdAluno");

                    b.ToTable("Provas");
                });

            modelBuilder.Entity("TesteAsc.Models.Turmas", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("TesteAsc.Models.Alunos", b =>
                {
                    b.HasOne("TesteAsc.Models.Turmas", "Turma")
                        .WithMany("alunos")
                        .HasForeignKey("Alunos");

                    b.HasOne("TesteAsc.Models.Competicao", null)
                        .WithMany("Aluno")
                        .HasForeignKey("Competicaoid");
                });

            modelBuilder.Entity("TesteAsc.Models.BoletimAluno", b =>
                {
                    b.HasOne("TesteAsc.Models.Alunos", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoIdAluno");
                });

            modelBuilder.Entity("TesteAsc.Models.Provas", b =>
                {
                    b.HasOne("TesteAsc.Models.Alunos", "Aluno")
                        .WithMany("Prova")
                        .HasForeignKey("AlunoIdAluno");
                });
#pragma warning restore 612, 618
        }
    }
}
